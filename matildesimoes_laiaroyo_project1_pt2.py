# -*- coding: utf-8 -*-
"""MatildeSimoes_LaiaRoyo_Project1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jO8YmM6LrzCC-0vKhD8Ry-0io0uOQ4f8

# Visualization of information - Project 1
## Grau en Ciència i Enginyeria de Dades
### Laia Royo and Matilde Simoes
"""

# first, we import all the necessary libraries for the project
import pandas as pd
import altair as alt
import glob
from vega_datasets import data
import requests

# to execute the following cells you should have all the files included in the zip uploded in collab !
# it is recomendable to execute JUST the part 2, as this first part takes around 10 minuts and changes are saved in CSVs.


from geopy.geocoders import Nominatim
from geopy.distance import geodesic

from fuzzywuzzy import fuzz
from fuzzywuzzy import process



## Part 2 - Visualitation of the data

"""### Q1: What are the states with large number of mass shootings per citizen?"""


gun_data = pd.read_csv("cleandata_GunViolenceAllYears2.csv")
gun_data.head()

# to make the plot we have to group by 'State Code' and count 'Incident ID'
state_incidents = gun_data.groupby('State Code')['Incident ID'].count().reset_index(name='Incident Count')

# we merge back with the original data to retain the 'Population' and 'State' columns
state_incidents = state_incidents.merge(gun_data[['State Code', 'Population_state', 'State_x']].drop_duplicates(), on='State Code', how='left')

# we normalize data per citizen using population
state_incidents['Incidents per Citizen'] = state_incidents['Incident Count'] / state_incidents['Population_state'] *1000000
state_incidents = state_incidents[state_incidents['State Code'] != 11]
# we delete State Code = 11: Columbia, because is not exactly an state and performs like an outlier

# we sort and get the top 10 states by per capita rate
top_10_states_per_citizen = state_incidents.sort_values(by='Incidents per Citizen', ascending=False).head(10)

# we create the chart
bar_chart_per_citizen = alt.Chart(top_10_states_per_citizen).mark_bar(color='steelblue').encode(
    x=alt.X('Incidents per Citizen:Q', title='Incidents per 1M Citizens'),
    y=alt.Y('State_x:N', sort='-x', title='State'),
    tooltip=['State_x:N', 'Incident Count:Q']
).properties(
    title='Gun Violence Incidents per Citizen by State'
)

bar_chart_per_citizen

"""### Q2: How is the number of mass shootings per citizen distributed across the different counties in the US? And across states?"""

"""**Mass shootings distributed across the different counties**"""


# read and show data
gun_data = pd.read_csv("cleandata_GunViolenceAllYears2.csv")

gun_data.head()

# county's code FIPS is state code + county code
gun_data['id'] = gun_data['State Code'].astype(str).str.zfill(2) + gun_data['County Code'].astype(str).str.zfill(3)

# we group the incidents by county
county_incidents = gun_data.groupby('County Code')['Incident ID'].count().reset_index(name='Incident Count')

# and merge back with the original data to retain the 'Population', 'County' and 'Id' columns
county_incidents = county_incidents.merge(gun_data[['County Code', 'Population_county', 'County', 'id']].drop_duplicates(), on='County Code', how='left')

# we normalize data per citizen
county_incidents['Incidents per Citizen'] = county_incidents['Incident Count'] / county_incidents['Population_county'] *1000000
county_incidents.head()

counties = "https://raw.githubusercontent.com/vega/vega-datasets/master/data/us-10m.json"

# we create the chart
county_map = alt.Chart(alt.Data(url=counties, format={"type": "topojson", "feature": "counties"})).mark_geoshape().encode(
    color=alt.Color('Incident Count:Q', scale=alt.Scale(scheme='reds'), title='Incident Count'),
    tooltip=['County:N', 'Incident Count:Q']
).transform_lookup(
    lookup='id',  # 'id' del archivo TopoJSON
    from_=alt.LookupData(county_incidents, 'id', ['Incident Count', 'County'])  # Unión con el DataFrame
).project(
    type='albersUsa'
).properties(
    title='Gun Violence Incidents by County'
)

county_map

"""**Mass shootings distributed across the different counties**"""

# we create the chart
states = alt.topo_feature('https://vega.github.io/vega-datasets/data/us-10m.json', feature='states')

state_map = alt.Chart(states).mark_geoshape().encode(
    color=alt.Color('Incidents per Citizen:Q', scale=alt.Scale(scheme='blues')),
    tooltip=['State_x:N', 'Incidents per Citizen:Q']  # Use exact column names
).transform_lookup(
    lookup='id',
    from_=alt.LookupData(state_incidents, 'State Code', ['Incidents per Citizen', 'State_x'])  # Include 'State_x'
).project(
    type='albersUsa'
).properties(
    title='Gun Violence Incidents by State'
)

state_map

"""### Q3: Are mass shootings correlated with gun violence incidents in schools?"""

# first, we read specific data for this visualitation
school_data = pd.read_csv('cleandata_SchoolIncidence.csv')
gun_data = pd.read_csv('cleandata_GunViolenceAllYears.csv')
school_data['Type'] = 'School'
gun_data['Type'] = 'Gun'
school_data.head()

school_data = school_data[['Incident ID', 'Incident Date', 'State Code', 'Type']]
gun_data = gun_data[['Incident ID', 'Incident Date', 'State Code', 'Type']]
incidents_data = pd.concat([school_data, gun_data])

# we convert 'Incident Date' column to datetime
incidents_data['Incident Date'] = pd.to_datetime(incidents_data['Incident Date'])

incidents_data = incidents_data[incidents_data['Incident Date'].dt.year.isin([2023])]

incidents_data['Month'] = incidents_data['Incident Date'].dt.month

"""**Evolution of mass shooting and gun violence by the time**"""

# we group by the new 'Month' column and 'Type' of incident
incidents_over_time = incidents_data.groupby(['Month', 'Type']).size().reset_index(name='Count')

# we create the chart
time_chart = alt.Chart(incidents_over_time).mark_line().encode(
    x='Month:T',  # Use 'Month' as the x-axis (time axis)
    y='Count:Q',  # Count of incidents on the y-axis
    color='Type:N'  # Different colors for each incident type
).properties(
    title='Gun vs. School Incidents Over Time by Month',
    width=800,
    height=400
)

time_chart

"""**Correlation between gun violence and mass shooting**"""

state_counts = incidents_data.groupby(['State Code', 'Type']).size().unstack(fill_value=0).reset_index()

# we compute correlation between 'School' and 'Gun'
correlation = state_counts.corr().loc['School', 'Gun']

# we prepare data for visualization
state_counts_melted = state_counts.melt(id_vars='State Code', value_vars=['School', 'Gun'], var_name='Type', value_name='Count')

# we create a scatter plot
scatter = alt.Chart(state_counts).mark_circle(size=100).encode(
    x=alt.X('School:Q', title='Number of School Incidents'),
    y=alt.Y('Gun:Q', title='Number of Gun Incidents'),
    tooltip=['State Code', 'School', 'Gun']
)

regression_line = scatter.transform_regression(
    'School', 'Gun', method='linear'
).mark_line(color='blue')

# we layer the scatter plot and regression line
chart = (scatter + regression_line).properties(
    title=f'Correlation between School and Gun Incidents by State: {correlation:.2f}'
)

chart

"""### Q4: How have mass shootings evolved the last years in the US?

**Yearly Evolution of Mass Shootings**



This line chart illustrates the annual trend in the number of mass shooting incidents over the years. Each data point represents the total incidents recorded for a given year, highlighting any increases or decreases in frequency over time.
"""

gun_data = pd.read_csv('cleandata_GunViolenceAllYears.csv')
gun_data['Year'] = pd.to_datetime(gun_data['Incident Date']).dt.year
gun_data['Month'] = pd.to_datetime(gun_data['Incident Date']).dt.month

# we calculate the number of incidents per year
yearly_incidents = gun_data.groupby(['Year', 'Month']).size().reset_index(name='Incident Count')

# we create a line graph to show the evolution of incidents by year
line_chart = alt.Chart(yearly_incidents).mark_line(point=True).encode(
    x=alt.X('Year:O', title='Year'),
    y=alt.Y('Incident Count:Q', title='Number of incidents'),
    tooltip=['Year', 'Incident Count']
).properties(
    title='Evolution of mass shootings in recent years in the USA'
)

line_chart

# we create a line graph to show the evolution of incidents by year
line_chart = alt.Chart(yearly_incidents).mark_line(point=True).encode(
    x=alt.X('Year:O', title='Year'),
    y=alt.Y('Incident Count:Q', title='Number of incidents'),
    tooltip=['Year', 'Incident Count']
).properties(
    title='Evolution of mass shootings in recent years in the USA'
)

line_chart

"""**Monthly Evolution of Mass Shootings Across All Years**


This line chart shows the trend of mass shootings each month for all years, with separate lines representing different years.
"""

# Group by Year and Month, then count incidents
monthly_incidents = gun_data.groupby(['Year', 'Month']).size().reset_index(name='Incident Count')

# Create a dictionary mapping month numbers to month names
month_dict = {1: 'January', 2: 'February', 3: 'March', 4: 'April', 5: 'May', 6: 'June',
              7: 'July', 8: 'August', 9: 'September', 10: 'October', 11: 'November', 12: 'December'}

# Add a new column for the month names
monthly_incidents['Month Name'] = monthly_incidents['Month'].map(month_dict)

# Create a line chart to show the monthly evolution for each year
line_chart = alt.Chart(monthly_incidents).mark_line(point=True).encode(
    x=alt.X('Month Name:O', title='Month',
            sort=['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',
                  'September', 'October', 'November', 'December'],
            axis=alt.Axis(title='Month')),
    y=alt.Y('Incident Count:Q', title='Number of incidents'),
    color=alt.Color('Year:O', title='Year'),
    tooltip=['Year', 'Month Name', 'Incident Count']
).properties(
    width=800,
    height=500,
    title='Monthly Evolution of Mass Shootings in Recent Years in the USA'
)

line_chart

"""**Smoothed Monthly Trend of Mass Shootings by Year**


The Smoothed Line Chart smooths data to reduce the appearance of sharp fluctuations between points, making it easier to visualise an overall trend over time.
"""

# Apply moving average to smooth the trends
monthly_incidents['Smoothed Incident Count'] = monthly_incidents.groupby('Month Name')['Incident Count'].transform(lambda x: x.rolling(3, min_periods=1).mean())

# Smoothed line chart
smoothed_line_chart = alt.Chart(monthly_incidents).mark_line(point=True).encode(
    x=alt.X('Month Name:O', title='Month',
            sort=['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',
                  'September', 'October', 'November', 'December']),
    y=alt.Y('Smoothed Incident Count:Q', title='Smoothed Number of Incidents'),
    color=alt.Color('Year:N', title='Year'),
    tooltip=['Year', 'Month Name', 'Smoothed Incident Count']
).properties(
    width=800,
    height=500,
    title='Smoothed Trend of Mass Shootings by Month and Year'
)

smoothed_line_chart

"""**Monthly Incidents of Mass Shootings by Year**


This bar chart shows the count of mass shooting incidents by month for each year. Each bar segment represents incidents for one year, allowing comparison across months within a year.
"""

bar_chart = alt.Chart(monthly_incidents).mark_bar().encode(
    x=alt.X('Month Name:O', title='Month',
            sort=['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',
                  'September', 'October', 'November', 'December']),
    y=alt.Y('Incident Count:Q', title='Number of incidents'),
    color=alt.Color('Year:N', title='Year'),
    tooltip=['Year', 'Month Name', 'Incident Count']
).properties(
    width=800,
    height=500,
    title='Monthly Incidents of Mass Shootings by Year'
)

bar_chart

"""**Box Plot of Mass Shootings by Month**


The box plot displays the distribution of mass shooting incidents for each month, across all years. Highlights outliers, median values, and variability in incident counts per month.
"""

# Map month numbers to names for readability
month_names = {1: 'January', 2: 'February', 3: 'March', 4: 'April', 5: 'May', 6: 'June', 7: 'July', 8: 'August',
               9: 'September', 10: 'October', 11: 'November', 12: 'December'}
monthly_incidents['Month Name'] = monthly_incidents['Month'].map(month_names)

# Now try creating the box plot again
box_plot = alt.Chart(monthly_incidents).mark_boxplot().encode(
    x=alt.X('Month Name:O', title='Month',
            sort=['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',
                  'September', 'October', 'November', 'December']),
    y=alt.Y('Incident Count:Q', title='Number of incidents'),
    color=alt.Color('Month Name:N', title='Month'),
    tooltip=['Month Name', 'Incident Count']
).properties(
    width=800,
    height=500,
    title='Box Plot of Monthly Mass Shootings'
)

box_plot

"""**Heatmap of Mass Shootings by Month and Year**


This heatmap provides a color-coded view of the frequency of mass shooting incidents by month and year. Darker shades represent higher incident counts, allowing for easy identification of years and months with high activity.
"""

heatmap_chart = alt.Chart(monthly_incidents).mark_rect().encode(
    x=alt.X('Month Name:O', title='Month',
            sort=['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',
                  'September', 'October', 'November', 'December']),
    y=alt.Y('Year:N', title='Year'),
    color=alt.Color('Incident Count:Q', scale=alt.Scale(scheme='blues'), title='Incident Count'),
    tooltip=['Year', 'Month Name', 'Incident Count']
).properties(
    width=800,
    height=500,
    title='Heatmap of Mass Shootings by Year and Month'
)

heatmap_chart